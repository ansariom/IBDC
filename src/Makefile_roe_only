datadir = db
fastq_dir = $(datadir)/raw_data

bowtie_db = $(datadir)/tair10/db
gff = $(datadir)/tair10/TAIR10_GFF3_genes.gff
genome = $(datadir)/tair10/genome.fas
pwm = $(datadir)/PWMs/pwms_0.09similarity.txt

prefix = ibdc_roe-only_fixedROE

threshold_oc = 4

input_tss_fastq_leaf = $(fastq_dir)/ath_tss_leaf.fastq
input_tss_fastq_root = $(fastq_dir)/ath_tss_root.fastq
input_oc_fastq_leaf = $(fastq_dir)/ath_leaf_oc_12hr_20bp.fastq
input_oc_fastq_root = $(fastq_dir)/ath_root_oc_12hr_20bp.fastq
input_expr_diff = $(datadir)/diff_exp_results.txt

pseudoCounts = 0.001
up_oc = 100
down_oc = 0

# for fake sequences
nseqs_per_file = 1000
npeaks = 41196

tss_region_for_oc_overall = $(prefix)/tss_up$(up_oc)_down$(down_oc)_region.bed

queues = megraw,bpp
premadefiles = $(datadir)/alignments

## JAMM Peaks related ###
leaf_basename = "ath-leaf-1192"
root_basename = "ath-root-1168"

premade_peaks = ../db/raw_peaks

leaf_covg_outfile = $(prefix)/$(leaf_basename).covg
root_covg_outfile = $(prefix)/$(root_basename).covg

nfolds = 5
#######################

all: $(prefix)/all_features_diffs_wide.rdat
	echo DEPS all: $(prefix)/all_features_diffs_wide.rdat

clean: 
	rm -rf $(prefix)

skip_making_bams = 1

python_bin = /local/cluster/bin/python
python_3_bin = /local/cluster/bin/python3.5

roe_outdir = $(prefix)/roe_only_out
roe_seed = 10657

##################################
### Train and Test
##################################

train: %roe_only_features_classed.csv
	echo $(python_bin) software/train_test_crossVal.py -i $(prefix)/roe_only_features_classed.csv -o $(prefix) -n $(nfolds) -t roe_only |\
		SGE_Array -q $(queues) -m 100G -r $(prefix)/j1_crossval_train_test_roe --hold_names $(prefix)/j1_prepare_train_data_logs

train_tfbs: %tfbs_only_features_classed.csv
	echo $(python_bin) software/train_test_crossVal_tfbs.py -i $(prefix)/tfbs_only_features_classed.csv -o $(prefix) -n $(nfolds) -t tfbs_only |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/j1_crossval_train_test_tfbs --hold_names $(prefix)/j1_prepare_train_data_tfbs_only_logs

%roe_only_features_classed.csv %roe_only_diff_info.csv:
	echo software/prepare_data_for_classification.R $(prefix)/all_features_diffs_wide.rdat roe_only $(prefix)/roe_only_features_classed.csv $(prefix)/roe_only_diff_info.csv |\
		SGE_Array -m 10G -q $(queues) -r $(prefix)/j1_prepare_train_data_logs --hold_names $(prefix)/j1_merge_all_features

%roe_only_allTSSs_features.csv %roe_only_allTSSs_diff_info.csv:
	echo software/get_all_tss_features.R $(prefix)/all_features_diffs_wide.rdat $(prefix)/all_tss_diffs_wide.rdat roe_only $(roe_outdir)/all_tss_features_unscaled.csv $(roe_outdir)/all_tss_diff_info.csv |\
		SGE_Array -m 50G -q $(queues) -r $(prefix)/j1_get_all_tss_features_logs --hold_names $(prefix)/j1_merge_all_features

%tfbs_only_features_classed.csv:
	echo software/prepare_data_for_classification.R $(prefix)/all_features_diffs_wide.rdat tfbs_only $(prefix)/tfbs_only_features_classed.csv $(prefix)/tfbs_only_diff_info.csv |\
		SGE_Array -m 10G -q $(queues) -r $(prefix)/j1_prepare_train_data_tfbs_only_logs --hold_names $(prefix)/j1_merge_all_features

####################################################################
### Extract Feature info for insilico knock down
####################################################################
%tissue_preds_all_tss.csv: %roe_only_allTSSs_features.csv
	echo $(python_bin) software/get_feature_info_from_pymodel.py $(prefix)/$(roe_seed)/roe_only_model.sav $(prefix)/$(roe_seed)/unscaled_train.npy $(roe_outdir)/all_tss_features_unscaled.csv $(roe_outdir)/tissue_preds_all_tss.csv $(roe_outdir)/all_tss_features_scaled.tsv |\
		SGE_Array -m 100G -q $(queues) -r $(prefix)/j1_get_tss_probs_logs --hold_names $(prefix)/j1_get_all_tss_features_logs

feature_package_roe: %tissue_preds_all_tss.csv
	echo software/get_feature_package.R $(prefix)/all_tss_diffs_wide.rdat $(roe_outdir)/tissue_preds_all_tss.csv $(prefix)/$(roe_seed)/roe_only_train_tss_ids.txt $(prefix)/$(roe_seed)/roe_only_test_tss_ids.txt $(prefix)/$(roe_seed)/roe_only_coef_table.txt roe_only $(roe_outdir) |\
		SGE_Array -m 100G -q $(queues) -r $(prefix)/j1_feature_package_logs --hold_names $(prefix)/j1_get_tss_probs_logs


# SET 1
##################################
###
### Generating TSS features - Leaf
###
##################################

%capfiltered_leaf.fastq: $(input_tss_fastq_leaf)
ifeq ($(skip_making_bams),0)
	echo DEPS $*capfiltered_leaf.fastq: $(input_tss_fastq_leaf)
	mkdir -p $(prefix)
	echo software/CapFilter.pl seq --out $(prefix)/capfiltered_leaf.fastq $(input_tss_fastq_leaf)  | \
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j1_capfilter_seq_logs_leaf
else
	echo DEPS $*capfiltered_leaf.fastq:
endif


%aligned_leaf.bam: %capfiltered_leaf.fastq
ifeq ($(skip_making_bams),1)
	echo DEPS $*aligned_leaf.bam: 
	mkdir -p $(prefix)
	echo ln -s ../$(premadefiles)/aligned_leaf.bam $(prefix)/aligned_leaf.bam | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j2_bowtie_logs_leaf 
else
	echo DEPS $*aligned_leaf.bam: $*capfiltered_leaf.fastq $(bowtie_db).1.ebwt	
	echo bowtie -p 10 -v 0 -m 1 -a --best --strata --sam-no-qname-trunc -S $(bowtie_db) $(prefix)/capfiltered_leaf.fastq \| software/remove_no_hits.pl \| software/samtools sort -T \$$TMPDIR/tempfiles -O bam \> $(prefix)/aligned_leaf.bam | \
		SGE_Array -P 10 -q $(queues) -m 40G -r $(prefix)/j2_bowtie_logs_leaf --hold_names $(prefix)/j1_capfilter_seq_logs_leaf
endif


%aligned_leaf.rawpeaks: %aligned_leaf.bam
	echo ln -s ../$(premade_peaks)/aligned_leaf.rawpeaks $(prefix)/aligned_leaf.rawpeaks | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j2a_raw_leaf_peaks --hold_names $(prefix)/j2_bowtie_logs_leaf

%aligned_leaf.peaks: %aligned_leaf.rawpeaks
	echo DEPS $*aligned_leaf.peaks: $*aligned_leaf.bam
	echo bedtools coverage -s -d -abam $(prefix)/aligned_leaf.bam -b $(prefix)/aligned_leaf.rawpeaks \> $(leaf_covg_outfile) \; software/generate_peaks_for_annotation.R $(leaf_covg_outfile) $(prefix)/aligned_leaf.peaks |\
		SGE_Array -q $(queues) -m 20G -r $(prefix)/j3_peaks_logs_leaf --hold_names $(prefix)/j2a_raw_leaf_peaks
	
%aligned.peaks_leaf.annotated: %aligned_leaf.peaks
	echo DEPS $*aligned.peaks_leaf.annotated: $*aligned_leaf.peaks
	echo software/annotate_TSS_peaks.pl -p -G $(gff) $(prefix)/aligned_leaf.peaks \> $(prefix)/aligned.peaks_leaf.annotated | \
		SGE_Array -q $(queues) -m 5G -r $(prefix)/j4_annotate_peaks_logs_leaf --hold_names $(prefix)/j3_peaks_logs_leaf

%aligned.peaks.annotated_leaf.capped: %aligned.peaks_leaf.annotated
	echo DEPS $*aligned.peaks.annotated_leaf.capped: $*aligned.peaks_leaf.annotated
	echo software/CapFilter.pl peak --sorted --cutoff 0 --out $(prefix)/aligned.peaks.annotated_leaf.capped $(prefix)/aligned.peaks_leaf.annotated $(prefix)/aligned_leaf.bam $(genome) | \
		SGE_Array -q $(queues) -m 5G -r $(prefix)/j5_capfilter_cap_logs_leaf --hold_names $(prefix)/j4_annotate_peaks_logs_leaf


%aligned.peaks.annotated.capped_leaf.filtered: %aligned.peaks.annotated_leaf.capped
	echo DEPS $*aligned.peaks.annotated.capped_leaf.filtered: $*aligned.peaks.annotated_leaf.capped
	echo "cat $(prefix)/aligned.peaks.annotated_leaf.capped | awk -F ',' '{if(NR == 1) {print \$$0} else if( \$$NF > 50 ) { print \$$0 | \"sort -t, -k5,5nr\"} }' | awk -F ',' '{if(NR == 1) {print \$$0} else if(\$$9 == \"tss\" || \$$9 == \"<250\" || \$$9 == \"<500\" || \$$9 == \"5'\''utr\") {print \$$0}}' | awk -F ',' '{if(NR == 1) {print \$$0} else if(\$$10 == \"NA\") {print \$$1\",\"\$$2\",\"\$$3\",\"\$$4\",\"\$$5\",\"\$$6\",\"\$$7\",\"\$$8\",\"\$$9\",\"\$$11\".1\"\",\"\$$11\",\"\$$12\",\"\$$13} else {print \$$0} }'  > $(prefix)/aligned.peaks.annotated.capped_leaf.filtered" |\
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j6_filter_by_capped_logs_leaf --hold_names $(prefix)/j5_capfilter_cap_logs_leaf


# SET 2
##################################
###
### Generating TSS features - Root
###
##################################


%capfiltered_root.fastq: $(input_tss_fastq_root)
ifeq ($(skip_making_bams),0)
	echo DEPS $*capfiltered_root.fastq: $(input_tss_fastq_root)
	mkdir -p $(prefix)
	echo software/CapFilter.pl seq --out $(prefix)/capfiltered_root.fastq $(input_tss_fastq_root)  | \
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j1_capfilter_seq_logs_root
else
	echo DEPS $*capfiltered_root.fastq:
endif


%aligned_root.bam: %capfiltered_root.fastq
ifeq ($(skip_making_bams),1)
	echo DEPS $*aligned_root.bam:
	mkdir -p $(prefix)
	echo ln -s ../$(premadefiles)/aligned_root.bam $(prefix)/aligned_root.bam | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j2_bowtie_logs_root 
else
	echo DEPS $*aligned_root.bam: $*capfiltered_root.fastq $(bowtie_db).1.ebwt
	echo bowtie -p 40 -v 0 -m 1 -a --best --strata --sam-no-qname-trunc -S $(bowtie_db) $(prefix)/capfiltered_root.fastq \| software/remove_no_hits.pl \| software/samtools sort -T \$$TMPDIR/tempfiles -O bam \> $(prefix)/aligned_root.bam | \
		SGE_Array -P 10 -q $(queues) -m 40G -r $(prefix)/j2_bowtie_logs_root --hold_names $(prefix)/j1_capfilter_seq_logs_root
endif


%aligned_root.rawpeaks: %aligned_root.bam
	echo ln -s ../$(premade_peaks)/aligned_root.rawpeaks $(prefix)/aligned_root.rawpeaks | \
                SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j2a_raw_root_peaks --hold_names $(prefix)/j2_bowtie_logs_root

%aligned_root.peaks: %aligned_root.rawpeaks
	echo DEPS $*aligned_root.peaks: $*aligned_root.bam
	echo bedtools coverage -s -d -abam $(prefix)/aligned_root.bam -b $(prefix)/aligned_root.rawpeaks \> $(root_covg_outfile) \; software/generate_peaks_for_annotation.R $(root_covg_outfile) $(prefix)/aligned_root.peaks |\
                SGE_Array -q $(queues) -m 20G -r $(prefix)/j3_peaks_logs_root --hold_names $(prefix)/j2a_raw_root_peaks

%aligned.peaks_root.annotated: %aligned_root.peaks
	echo DEPS $*aligned.peaks_root.annotated: $*aligned_root.peaks
	echo software/annotate_TSS_peaks.pl -p -G $(gff) $(prefix)/aligned_root.peaks \> $(prefix)/aligned.peaks_root.annotated | \
		SGE_Array -q $(queues) -m 5G -r $(prefix)/j4_annotate_peaks_logs_root --hold_names $(prefix)/j3_peaks_logs_root


%aligned.peaks.annotated_root.capped: %aligned.peaks_root.annotated
	echo DEPS $*aligned.peaks.annotated_root.capped: $*aligned.peaks_root.annotated
	echo software/CapFilter.pl peak --sorted --cutoff 0 --out $(prefix)/aligned.peaks.annotated_root.capped $(prefix)/aligned.peaks_root.annotated $(prefix)/aligned_root.bam $(genome) | \
		SGE_Array -q $(queues) -m 5G -r $(prefix)/j5_capfilter_cap_logs_root --hold_names $(prefix)/j4_annotate_peaks_logs_root

%aligned.peaks.annotated.capped_root.filtered: %aligned.peaks.annotated_root.capped
	echo DEPS $*aligned.peaks.annotated.capped_root.filtered: $*aligned.peaks.annotated_root.capped
	echo "cat $(prefix)/aligned.peaks.annotated_root.capped | awk -F ',' '{if(NR == 1) {print \$$0} else if( \$$NF > 50) {print \$$0 | \"sort -t, -k5,5nr\"}}' | awk -F ',' '{if(NR == 1) {print \$$0} else if( \$$9 == \"tss\" || \$$9 == \"<250\" || \$$9 == \"<500\" || \$$9 == \"5'\''utr\") {print \$$0}}' | awk -F ',' '{if(NR == 1) {print \$$0} else if(\$$10 == \"NA\") {print \$$1\",\"\$$2\",\"\$$3\",\"\$$4\",\"\$$5\",\"\$$6\",\"\$$7\",\"\$$8\",\"\$$9\",\"\$$11\".1\"\",\"\$$11\",\"\$$12\",\"\$$13 } else {print \$$0} }' > $(prefix)/aligned.peaks.annotated.capped_root.filtered" |\
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j6_filter_by_capped_logs_root --hold_names $(prefix)/j5_capfilter_cap_logs_root


# SET 3
################################
###
### Generating Regions of Interest
###
################################

#combine leaf and root tss filtered peaks
%aligned.peaks.annotated.capped.filtered: %aligned.peaks.annotated.capped_leaf.filtered %aligned.peaks.annotated.capped_root.filtered
	echo DEPS $*aligned.peaks.annotated.capped.filtered: $*aligned.peaks.annotated.capped_leaf.filtered $*aligned.peaks.annotated.capped_root.filtered
	echo "cat $(prefix)/aligned.peaks.annotated.capped_leaf.filtered <(tail -n +2 $(prefix)/aligned.peaks.annotated.capped_root.filtered) > $(prefix)/aligned.peaks.annotated.capped.filtered" | \
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j7.1_merge_peaks_logs --hold_names $(prefix)/j6_filter_by_capped_logs_leaf,$(prefix)/j6_filter_by_capped_logs_root


# First: pull regions 
%peaks_3000_region.fa: %aligned.peaks.annotated.capped.filtered
	echo DEPS $*peaks_3000_region.fa: $*aligned.peaks.annotated.capped.filtered
	echo "software/get_seqs_stranded_oneLine.pl $(prefix)/aligned.peaks.annotated.capped.filtered 3000 3000 $(genome)| software/dedup_fasta.sh > $(prefix)/peaks_3000_region.fa" |\
		SGE_Array -q $(queues) -m 10G -r $(prefix)/j7.2_get_peaks_seqs_logs --hold_names $(prefix)/j7.1_merge_peaks_logs

$(tss_region_for_oc_overall): %peaks_3000_region.fa
	echo software/get_tss_region.sh $(up_oc) $(down_oc) 3000 3000 $(prefix)/peaks_3000_region.fa \> $(tss_region_for_oc_overall) |\
		SGE_Array -q $(queues) -r $(prefix)/j7.3_get_overall_oc_region_logs --hold_names $(prefix)/j7.2_get_peaks_seqs_logs

split_fasta: $(tss_region_for_oc_overall)
	echo software/split_fasta_file.sh $(prefix)/peaks_3000_region.fa 1000 $(prefix)/seqs seq |\
		SGE_Array -q $(queues) -r $(prefix)/j8a_split_fasta_logs --hold_names $(prefix)/j7.2_get_peaks_seqs_logs

# Compute Cumulitive scores for extracting ROEs
cumulitive_scores: split_fasta
	mkdir $(prefix)/sumscores; \
	software/produce_fake_seqs.sh $(npeaks) $(nseqs_per_file) $(prefix)/fake.fa $(prefix)/seqs seq; \
	for seq in `ls $(prefix)/seqs` ; do \
		scoreOutBase=$(prefix)/sumscores/`basename $$seq`; \
		echo java -jar software/tfbs_scan.jar CumScore --pseudoCounts $(pseudoCounts) -n 1 $(pwm) $(prefix)/seqs/$$seq $$scoreOutBase | SGE_Array -q $(queues) -m 15G -r $(prefix)/j8.1_logs_$$seq --hold_names $(prefix)/j8a_split_fasta_logs; \
	done

# Now get the distribution of cumulitive scores from all sub-parts
cumscores_dists: cumulitive_scores
	echo software/extract_dists.sh $(pwm) $(prefix)/sumscores $(prefix)/dists |\
		SGE_Array -q $(queues) -P 20 -m 50G -r $(prefix)/j8.2_get_dist_of_cumscores_logs --hold_names $(prefix)/j8.1_$*

# Find ROEs from given dists
%roe_3000.FWD.table %roe_3000.REV.table: cumscores_dists
	echo software/get_pwm_labels.sh $(pwm) $(prefix)/pwm_labels.txt \; software/find_roe_tables.R $(prefix)/dists $(prefix)/roe_plots $(prefix)/pwm_labels.txt $(prefix)/roe_3000  |\
		SGE_Array -q $(queues) -r $(prefix)/j8_roefinder_logs --hold_names $(prefix)/j8.2_get_dist_of_cumscores_logs


%features_map.txt %features.rdat: %roe_3000.FWD.table %roe_3000.REV.table
	echo software/get_features_inparallel_roe.sh $(prefix)/peaks_3000_region.fa $(prefix) $(prefix)/features.rdat $(prefix)/features_map.txt $(prefix)/roe_3000.FWD.table $(prefix)/roe_3000.REV.table $(pseudoCounts) $(pwm) |\
		SGE_Array -P 10 -q $(queues) -m 200G -r $(prefix)/j9_genfeatures_logs --hold_names $(prefix)/j8_roefinder_logs,$(prefix)/j7.2_get_peaks_seqs_logs


# SET 4
################################
###
### Generating OC features, Leaf
###
################################

%oc_alignment_leaf.bam: $(input_oc_fastq_leaf) $(bowtie_db).1.ebwt
ifeq ($(skip_making_bams),1)
	echo DEPS $*oc_alignment_leaf.bam:
	mkdir -p $(prefix)
	echo ln -s ../$(premadefiles)/oc_alignment_leaf.bam $(prefix)/oc_alignment_leaf.bam | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j1_oc_leaf_bowtie_logs 
else
	echo DEPS $*oc_alignment_leaf.bam: $(input_oc_fastq_leaf) $(bowtie_db).1.ebwt
	echo bowtie -p 40 -v 0 -m 1 -a --best --strata --sam-no-qname-trunc -S $(bowtie_db) $(input_oc_fastq_leaf) \| software/remove_no_hits.pl \| software/samtools sort -T \$$TMPDIR/tempfiles -O bam \> $(prefix)/oc_alignment_leaf.bam | \
		SGE_Array -P 10 -q $(queues) -m 40G -r $(prefix)/j1_oc_leaf_bowtie_logs
endif



%oc_alignment_leaf.bed: %oc_alignment_leaf.bam
	echo DEPS $*oc_alignment_leaf.bed: $*oc_alignment_leaf.bam
	echo software/bamToBed -i $(prefix)/oc_alignment_leaf.bam \| grep -v \'Chr[CM]\' \> $(prefix)/oc_alignment_leaf.bed | \
 		SGE_Array -q $(queues) -m 40G -r $(prefix)/j2_oc_leaf_bamtobed_logs --hold_names $(prefix)/j1_oc_leaf_bowtie_logs
		

%oc_peaks_leaf.bed: %oc_alignment_leaf.bed
	echo DEPS $*oc_peaks_leaf.bed: $*oc_alignment_leaf.bed
	echo mkdir -p $(prefix)/peaks_dir_leaf\; cd $(prefix)/peaks_dir_leaf\; ../../software/fseq-1.84/bin/fseq -f 0 -l 200 -of bed -t $(threshold_oc) ../oc_alignment_leaf.bed\; cat Chr*.bed \> ../oc_peaks_leaf.bed\; rm Chr*.bed | \
		SGE_Array -q $(queues) -m 100G -r $(prefix)/j3_oc_leaf_peak_logs --hold_names $(prefix)/j2_oc_leaf_bamtobed_logs

clean_oc: 
	echo DEPS clean_oc: 
	rm $(prefix)/oc_*
	rm -rf $(prefix)/j*_oc*

# SET 5
#####################################################
###
### Merging to create OC percentage features for leaf
###
#####################################################

#%features_long_oc_p_leaf.txt: %oc_peaks_leaf.bed
%features_long_oc_p_leaf.txt:
	echo DEPS $*features_long_oc_p_leaf.txt: $*oc_peaks_leaf.bed $*features_long.txt $*features_map.txt
	echo software/compute_oc_overlap.sh $(prefix)/features_map.txt $(prefix)/oc_peaks_leaf.bed OC_P_LEAF $(prefix)/features_long_oc_p_leaf.txt $(prefix)/roes 100000 40 |\
		SGE_Array -P 40 -q $(queues) -m 200G -r $(prefix)/j1_merge_oc_p_leaf_logs --hold_names $(prefix)/j3_oc_leaf_peak_logs,$(prefix)/j9_genfeatures_logs

# SET 6
################################
###
### Generating OC features, Root
###
################################

%oc_alignment_root.bam: $(input_oc_fastq_root) $(bowtie_db).1.ebwt
ifeq ($(skip_making_bams),1)
	echo DEPS $*oc_alignment_root.bam:
	mkdir -p $(prefix)
	echo ln -s ../$(premadefiles)/oc_alignment_root.bam $(prefix)/oc_alignment_root.bam | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j1_oc_root_bowtie_logs
else
	echo DEPS $*oc_alignment_root.bam: $(input_oc_fastq_root) $(bowtie_db).1.ebwt
	echo bowtie -p 40 -v 0 -m 1 -a --best --strata --sam-no-qname-trunc -S $(bowtie_db) $(input_oc_fastq_root) \| software/remove_no_hits.pl \| software/samtools sort -T \$$TMPDIR/tempfiles -O bam \> $(prefix)/oc_alignment_root.bam | \
		SGE_Array -P 10 -q $(queues) -m 40G -r $(prefix)/j1_oc_root_bowtie_logs
endif



%oc_alignment_root.bed: %oc_alignment_root.bam
	echo DEPS $*oc_alignment_root.bed: $*oc_alignment_root.bam
	echo software/bamToBed -i $(prefix)/oc_alignment_root.bam \| grep -v \'Chr[CM]\' \> $(prefix)/oc_alignment_root.bed | \
 		SGE_Array -q $(queues) -m 40G -r $(prefix)/j2_oc_root_bamtobed_logs --hold_names $(prefix)/j1_oc_root_bowtie_logs
		

%oc_peaks_root.bed: %oc_alignment_root.bed
	echo DEPS $*oc_peaks_root.bed: $*oc_alignment_root.bed
	echo mkdir -p $(prefix)/peaks_dir_root\; cd $(prefix)/peaks_dir_root\; ../../software/fseq-1.84/bin/fseq -f 0 -l 200 -of bed -t $(threshold_oc) ../oc_alignment_root.bed\; cat Chr*.bed \> ../oc_peaks_root.bed\; rm Chr*.bed | \
		SGE_Array -q $(queues) -m 100G -r $(prefix)/j3_oc_root_peak_logs --hold_names $(prefix)/j2_oc_root_bamtobed_logs




# SET 7
#####################################################
###
### Merging to create OC percentage features for root
###
#####################################################

#%features_long_oc_p_root.txt: %oc_peaks_root.bed 
%features_long_oc_p_root.txt:
	echo DEPS $*features_long_oc_p_root.txt: $*oc_peaks_root.bed $*features_long.txt $*features_map.txt
	echo software/compute_oc_overlap.sh $(prefix)/features_map.txt $(prefix)/oc_peaks_root.bed OC_P_ROOT $(prefix)/features_long_oc_p_root.txt $(prefix)/roes 100000 40 |\
		SGE_Array -P 40 -q $(queues) -m 200G -r $(prefix)/j1_merge_oc_p_root_logs --hold_names $(prefix)/j3_oc_root_peak_logs,$(prefix)/j9_genfeatures_logs


# SET 7.5
################################
###
### Generating overall openness; one for leaf, one for root
###
################################


%features_long_oc_p_overall_leaf.txt:
	echo DEPS $*features_long_oc_p_overall_leaf.txt: $*oc_peaks_leaf.bed \$(tss_region_for_oc_overall)
	echo software/compute_range_overlap.sh $(tss_region_for_oc_overall) $(prefix)/oc_peaks_leaf.bed LEAF $(prefix)/features_long_oc_p_overall_leaf.txt |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/j7.5_merge_oc_p_overall_leaf_logs --hold_names $(prefix)/j3_oc_leaf_peak_logs,$(prefix)/j7.3_get_overall_oc_region_logs

%features_long_oc_p_overall_root.txt: 
	echo DEPS $*features_long_oc_p_overall_root.txt: $*oc_peaks_root.bed \$(tss_region_for_oc_overall)
	echo software/compute_range_overlap.sh $(tss_region_for_oc_overall) $(prefix)/oc_peaks_root.bed ROOT $(prefix)/features_long_oc_p_overall_root.txt |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/j7.5_merge_oc_p_overall_root_logs --hold_names $(prefix)/j3_oc_root_peak_logs,$(prefix)/j7.3_get_overall_oc_region_logs


# SET 8
#####################################################
###
### Merging allll the features together
###
#####################################################
%all_features_diffs_wide.rdat: %features_long_oc_p_overall_leaf.txt %features_long_oc_p_overall_root.txt %features_long_oc_p_leaf.txt %features_long_oc_p_root.txt $(input_expr_diff) %features.rdat 
	echo software/merge_features.R $(prefix)/features.rdat $(prefix)/features_long_oc_p_leaf.txt $(prefix)/features_long_oc_p_root.txt $(prefix)/features_long_oc_p_overall_leaf.txt $(prefix)/features_long_oc_p_overall_root.txt $(input_expr_diff) $(prefix)/all_features_diffs_wide.rdat $(prefix)/all_tss_diffs_wide.rdat |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/j1_merge_all_features --hold_names $(prefix)/j9_genfeatures_logs,$(prefix)/j1_merge_oc_p_leaf_logs,$(prefix)/j1_merge_oc_p_root_logs,$(prefix)/j7.5_merge_oc_p_overall_leaf_logs,$(prefix)/j7.5_merge_oc_p_overall_root_logs

feature_package:
	
