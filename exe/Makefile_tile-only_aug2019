datadir = db
fastq_dir = $(datadir)/raw_data

bowtie_db = $(datadir)/tair10/db
gff = $(datadir)/tair10/TAIR10_GFF3_genes.gff
genome = $(datadir)/tair10/genome.fas
pwm = $(datadir)/PWMs/pwms_peat_core_agris_hughes_V4.mat

prefix = ibdc_tile-only_aug2019

threshold_oc = 4

input_tss_fastq_leaf = $(fastq_dir)/ath_tss_leaf.fastq
input_tss_fastq_root = $(fastq_dir)/ath_tss_root.fastq
input_oc_fastq_leaf = $(fastq_dir)/ath_leaf_oc_12hr_20bp.fastq
input_oc_fastq_root = $(fastq_dir)/ath_root_oc_12hr_20bp.fastq
#input_expr_diff = $(datadir)/diff_exp_results.txt
#input_expr_diff = $(datadir)/ath_root_leaf_rsem_deseq_diff_expr_results.txt
input_expr_diff = $(datadir)/ath_root_leaf_rsem_deseq_diff_expr_results_filtered.txt

pseudoCounts = 0.001
#up_oc2 = 100
#down_oc2 = 1000

up_oc1 = 500
down_oc1 = 0

# for fake sequences
nseqs_per_file = 1000

#mean_expr_file = $(datadir)/rna_seq/mean_norm_leaf_root.txt
mean_expr_file = $(input_expr_diff)

tss_region_for_oc_overall_1 = $(prefix)/tss_up$(up_oc1)_down$(down_oc1)_region.bed
tss_region_for_oc_overall_2 = $(prefix)/tss_up$(up_oc2)_down$(down_oc2)_region.bed

queues = megraw,bpp
premadefiles = $(datadir)/alignments
premade_alignments = $(datadir)/premade_alignments/

## JAMM Peaks related ###
leaf_basename = "ath-leaf-1192"
root_basename = "ath-root-1168"

premade_peaks = ../db/raw_peaks

leaf_covg_outfile = $(prefix)/$(leaf_basename).covg
root_covg_outfile = $(prefix)/$(root_basename).covg

tile_nucsUp = 1000
tile_nucsDown = 500
tileWin = 100

nfolds = 5
#######################

all: $(prefix)/all_features_diffs_wide.rdat
	echo DEPS all: $(prefix)/all_features_diffs_wide.rdat

clean: 
	rm -rf $(prefix)

skip_making_bams = 1

python_bin = /local/cluster/bin/python2
python_3_bin = /local/cluster/bin/python3.5

roe_outdir = $(prefix)/tile_only_out
roe_outdir_fc = $(roe_outdir)/$(expr_thr)/$(fc)/$(roe_seed)

# fc3 med-high
roe_seed = 690846

fc = 3
#expr_thr = "all"
#expr_thr = "med_low"
expr_thr = "med_high"

model_type = "l1_logreg"
##################################
### Seq content features #########
##################################
tile_win=20
peaks_online_fa = $(prefix)/peaks_3000_region_oneLine.fa

%peaks_3000_region_oneLine.fa:
	echo "cat $(prefix)/peaks_3000_region.fa  | awk '/^>/ {printf(\"\\n%s\\n\",\$$0);next; } { printf(\"%s\",\$$0);}  END {printf(\"\\n\");}' | tail -n +2 > $(prefix)/peaks_3000_region_oneLine.fa" |\
                SGE_Array -q $(queues) -m 50G -r $(prefix)/j00_seqContent_fa_logs

attach_at_contents: remove_pwms  %peaks_3000_region_oneLine.fa
	echo $(python_bin) software/get_seq_content_tiled.py $(tile_win) 200 40 $(prefix)/at_tmp.csv $(prefix)/peaks_3000_region_oneLine.fa |\
                SGE_Array -q $(queues) -m 50G -r $(prefix)/j00_seqContent_logs --hold_names $(prefix)/j0_remove_noExpr_pwms_logs,$(prefix)/j00_seqContent_fa_logs; \
        echo "cat $(prefix)/at_tmp.csv | awk '{if (NR == 1) {print substr(\$$0,4)} else {print \$$0}}' > $(prefix)/peaks_3000_region_oneLine.fa.csv" |\
                SGE_Array -q $(queues) -r $(prefix)/j01_edit_eader_logs --hold_name $(prefix)/j00_seqContent_logs; \
        echo software/merge_seqContent_to_allfeatures.R $(prefix)/all_features_diffs_wide.rdat $(prefix)/peaks_3000_region_oneLine.fa.csv $(prefix)/all_features_diffs_wide_withAT.rdat |\
                SGE_Array -m 50G -q $(queues) -r $(prefix)/j02_seqCont_features_log --hold_names $(prefix)/j01_edit_eader_logs; \
        echo software/merge_seqContent_to_allTSSs.R $(prefix)/all_tss_diffs_wide.rdat $(prefix)/peaks_3000_region_oneLine.fa.csv $(prefix)/all_tss_diffs_wide_withAT.rdat |\
                SGE_Array -m 50G -q $(queues) -r $(prefix)/j02_seqCont_features_tss_log --hold_names $(prefix)/j01_edit_eader_logs


##################################
#### Remove no-expressed PWMs ###
##################################
pwm_noexpr_coreless = db/PWMs/pwms_peat_core_agris_hughes_V4_noExprPWMs.txt
seqCont_file = $(prefix)/peaks_3000_region_oneLine.fa.csv

model_outdir = $(prefix)/$(expr_thr)/$(fc)/$(model_type)

remove_pwms:
	echo software/remove_pwms_from_feature_rdat.R $(prefix)/all_features_diffs_wide.rdat $(prefix)/all_tss_diffs_wide.rdat $(pwm_noexpr_coreless) $(prefix)/all_features_diffs_wide.rdat $(prefix)/all_tss_diffs_wide.rdat |\
                SGE_Array -q $(queues) -m 300G -r $(prefix)/j0_remove_noExpr_pwms_logs


###################################
### Train and Test
##################################

performance_plots:
	echo ../src/utils_paper/prec_recall_curves.R $(roe_outdir_fc)/tile_only_featureInfo_hardCodedSoftCoded.rdat $(roe_outdir_fc) |\
                SGE_Array -q $(queues) -m 100G -r $(roe_outdir_fc)/j1_performance_plots_logs --hold_names $(roe_outdir_fc)/j1_featureInfo_hardSoftCode_logs

train_l1: %tile_only_features_classed.csv
	echo $(python_bin) software/train_test_crossVal_noScale_l1.py -i $(model_outdir)/tile_only_features_classed.csv -o $(model_outdir) -n $(nfolds) -t tile_only |\
		SGE_Array -q *@megraw* -m 100G -r $(model_outdir)/j1_crossval_train_test --hold_names $(model_outdir)/j1_prepare_train_data_log,$(prefix)/j1_features_log

train_tfbsonly: %tfbs_only_features_classed.csv
	echo $(python_bin) software/train_test_crossVal_noScale.py -i $(model_outdir)/tfbs_only_features_classed.csv -o $(model_outdir) -n $(nfolds) -t tfbs_only |\
                SGE_Array -q $(queues) -m 100G -r $(model_outdir)/j1_crossval_train_test_tfbsonly --hold_names $(model_outdir)/j1_prepare_train_data_tfbs_only_logs

#train_oconly: %oc_only_features_classed.csv
train_oconly: 
	echo $(python_bin) software/train_test_crossVal_noScale.py -i $(model_outdir)/oc_only_features_classed.csv -o $(model_outdir) -n $(nfolds) -t oc_only |\
                SGE_Array -q $(queues) -m 100G -r $(model_outdir)/j1_crossval_train_test_oconly --hold_names $(model_outdir)/j1_prepare_train_data_oc_only_logs

%tile_only_features_classed.csv:
	echo software/prepare_data_for_classification_fc_expr_thresholded.R $(prefix)/all_features_diffs_wide_withAT.rdat tile_only $(model_outdir)/tile_only_features_classed.csv $(model_outdir)/tile_only_diff_info.csv $(fc) $(mean_expr_file) $(expr_thr) |\
		SGE_Array -m 100G -q $(queues) -r $(model_outdir)/j1_prepare_train_data_logs --hold_names $(model_outdir)/j1_merge_all_features

%tfbs_only_features_classed.csv:
	echo software/prepare_data_for_classification_fc_expr_thresholded.R $(prefix)/all_features_diffs_wide.rdat tfbs_only_tile $(model_outdir)/tfbs_only_features_classed.csv $(model_outdir)/tfbs_only_diff_info.csv $(fc) $(mean_expr_file) $(expr_thr) |\
		SGE_Array -m 100G -q $(queues) -r $(model_outdir)/j1_prepare_train_data_tfbs_only_logs --hold_names $(model_outdir)/j1_merge_all_features

%tile_only_allTSSs_features.csv %tile_only_allTSSs_diff_info.csv:
	echo software/get_all_tss_features.R $(prefix)/all_features_diffs_wide.rdat $(prefix)/all_tss_diffs_wide.rdat tile_only $(roe_outdir)/all_tss_features_unscaled.csv $(roe_outdir)/all_tss_diff_info.csv $(fc) |\
		SGE_Array -m 200G -q $(queues) -r $(prefix)/j1_get_all_tss_features_logs --hold_names $(prefix)/j1_merge_all_features

%oc_only_features_classed.csv:
	echo software/prepare_data_for_classification_fc_expr_thresholded.R $(prefix)/all_features_diffs_wide.rdat oc_only $(model_outdir)/oc_only_features_classed.csv $(model_outdir)/oc_only_diff_info.csv $(fc) $(mean_expr_file) $(expr_thr) |\
		SGE_Array -m 100G -q $(queues) -r $(model_outdir)/j1_prepare_train_data_oc_only_logs --hold_names $(prefix)/j1_merge_all_features

####################################################################
### Extract Feature info for insilico knock down
####################################################################

%tissue_preds_all_tss.csv: %tile_only_allTSSs_features.csv
	echo $(python_bin) software/get_feature_info_from_pymodel_noScale.py $(model_outdir)/$(roe_seed)/tile_only_model.sav $(model_outdir)/$(roe_seed)/unscaled_train.npy $(roe_outdir)/all_tss_features_unscaled.csv $(roe_outdir_fc)/tissue_preds_all_tss.csv $(roe_outdir_fc)/all_tss_features_scaled.tsv |\
		SGE_Array -m 400G -q $(queues) -r $(roe_outdir_fc)/j1_get_tss_probs_logs --hold_names $(prefix)/j1_get_all_tss_features_logs

feature_package_roe: %tissue_preds_all_tss.csv
	echo software/get_feature_package.R $(prefix)/all_tss_diffs_wide.rdat $(roe_outdir_fc)/tissue_preds_all_tss.csv $(model_outdir)/$(roe_seed)/tile_only_train_tss_ids.txt $(model_outdir)/$(roe_seed)/tile_only_test_tss_ids.txt $(model_outdir)/$(roe_seed)/tile_only_coef_table.txt tile_only $(roe_outdir_fc) $(fc) |\
		SGE_Array -m 400G -q $(queues) -r $(roe_outdir_fc)/j1_feature_package_logs --hold_names $(roe_outdir_fc)/j1_get_tss_probs_logs

%tile_only_featureInfo_hardCodedSoftCoded.rdat: feature_package_roe
	echo software/get_feature_package_harcoded_softcode.R $(prefix)/all_features_diffs_wide.rdat $(roe_outdir_fc)/feature_info.tsv $(roe_outdir_fc)/tss_info.tsv $(roe_outdir_fc)/tile_only_featureInfo_hardCodedSoftCoded.rdat |\
                 SGE_Array -m 300G -q $(queues) -r $(roe_outdir_fc)/j1_featureInfo_hardSoftCode_logs --hold_names $(roe_outdir_fc)/j1_feature_package_logs

%max_pwm_scores.txt:
	echo $(python_bin) software/compute_max_loglik_score.py $(pwm) tmp.txt \; tail -n +2 tmp.txt \> $(prefix)/max_pwm_scores.txt |\
		SGE_Array -q $(queues) -r $(prefix)/get_pwm_max_logs 


# SET 1
##################################
###
### Generating TSS features - Leaf
###
##################################

%capfiltered_leaf.fastq: $(input_tss_fastq_leaf)
ifeq ($(skip_making_bams),0)
	echo DEPS $*capfiltered_leaf.fastq: $(input_tss_fastq_leaf)
	mkdir -p $(prefix)
	echo software/CapFilter.pl seq --out $(prefix)/capfiltered_leaf.fastq $(input_tss_fastq_leaf)  | \
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j1_capfilter_seq_logs_leaf
else
	echo DEPS $*capfiltered_leaf.fastq:
endif


%aligned_leaf.bam: %capfiltered_leaf.fastq
ifeq ($(skip_making_bams),1)
	echo DEPS $*aligned_leaf.bam: 
	mkdir -p $(prefix)
	echo ln -s ../$(premade_alignments)/aligned_leaf_capFiltered.bam $(prefix)/aligned_leaf.bam | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j2_bowtie_logs_leaf 
else
	echo DEPS $*aligned_leaf.bam: $*capfiltered_leaf.fastq $(bowtie_db).1.ebwt	
	echo bowtie -p 10 -v 0 -m 1 -a --best --strata --sam-no-qname-trunc -S $(bowtie_db) $(prefix)/capfiltered_leaf.fastq \| software/remove_no_hits.pl \| software/samtools sort -T \$$TMPDIR/tempfiles -O bam \> $(prefix)/aligned_leaf.bam | \
		SGE_Array -P 10 -q $(queues) -m 40G -r $(prefix)/j2_bowtie_logs_leaf --hold_names $(prefix)/j1_capfilter_seq_logs_leaf
endif


%aligned_leaf.rawpeaks: %aligned_leaf.bam
	echo ln -s ../$(premade_peaks)/aligned_leaf.rawpeaks $(prefix)/aligned_leaf.rawpeaks | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j2a_raw_leaf_peaks --hold_names $(prefix)/j2_bowtie_logs_leaf

%aligned_leaf.peaks: %aligned_leaf.rawpeaks
	echo DEPS $*aligned_leaf.peaks: $*aligned_leaf.bam
	echo bedtools coverage -s -d -abam $(prefix)/aligned_leaf.bam -b $(prefix)/aligned_leaf.rawpeaks \> $(leaf_covg_outfile) \; software/generate_peaks_for_annotation.R $(leaf_covg_outfile) $(prefix)/aligned_leaf.peaks |\
		SGE_Array -q $(queues) -m 20G -r $(prefix)/j3_peaks_logs_leaf --hold_names $(prefix)/j2a_raw_leaf_peaks
	
%aligned.peaks_leaf.annotated: %aligned_leaf.peaks
	echo DEPS $*aligned.peaks_leaf.annotated: $*aligned_leaf.peaks
	echo software/annotate_TSS_peaks.pl -p -G $(gff) $(prefix)/aligned_leaf.peaks \> $(prefix)/aligned.peaks_leaf.annotated | \
		SGE_Array -q $(queues) -m 5G -r $(prefix)/j4_annotate_peaks_logs_leaf --hold_names $(prefix)/j3_peaks_logs_leaf

%aligned.peaks.annotated_leaf.capped: %aligned.peaks_leaf.annotated
	echo DEPS $*aligned.peaks.annotated_leaf.capped: $*aligned.peaks_leaf.annotated
	echo software/CapFilter.pl peak --sorted --cutoff 0 --out $(prefix)/aligned.peaks.annotated_leaf.capped $(prefix)/aligned.peaks_leaf.annotated $(prefix)/aligned_leaf.bam $(genome) | \
		SGE_Array -q $(queues) -m 5G -r $(prefix)/j5_capfilter_cap_logs_leaf --hold_names $(prefix)/j4_annotate_peaks_logs_leaf


%aligned.peaks.annotated.capped_leaf.filtered: %aligned.peaks.annotated_leaf.capped
	echo DEPS $*aligned.peaks.annotated.capped_leaf.filtered: $*aligned.peaks.annotated_leaf.capped
	echo "cat $(prefix)/aligned.peaks.annotated_leaf.capped | awk -F ',' '{if(NR == 1) {print \$$0} else if( \$$NF > 50 ) { print \$$0 | \"sort -t, -k5,5nr\"} }' | awk -F ',' '{if(NR == 1) {print \$$0} else if(\$$9 == \"tss\" || \$$9 == \"<250\" || \$$9 == \"<500\" || \$$9 == \"5'\''utr\") {print \$$0}}' | awk -F ',' '{if(NR == 1) {print \$$0} else if(\$$10 == \"NA\") {print \$$1\",\"\$$2\",\"\$$3\",\"\$$4\",\"\$$5\",\"\$$6\",\"\$$7\",\"\$$8\",\"\$$9\",\"\$$11\".1\"\",\"\$$11\",\"\$$12\",\"\$$13} else {print \$$0} }'  > $(prefix)/aligned.peaks.annotated.capped_leaf.filtered" |\
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j6_filter_by_capped_logs_leaf --hold_names $(prefix)/j5_capfilter_cap_logs_leaf


# SET 2
##################################
###
### Generating TSS features - Root
###
##################################


%capfiltered_root.fastq: $(input_tss_fastq_root)
ifeq ($(skip_making_bams),0)
	echo DEPS $*capfiltered_root.fastq: $(input_tss_fastq_root)
	mkdir -p $(prefix)
	echo software/CapFilter.pl seq --out $(prefix)/capfiltered_root.fastq $(input_tss_fastq_root)  | \
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j1_capfilter_seq_logs_root
else
	echo DEPS $*capfiltered_root.fastq:
endif


%aligned_root.bam: %capfiltered_root.fastq
ifeq ($(skip_making_bams),1)
	echo DEPS $*aligned_root.bam:
	mkdir -p $(prefix)
	echo ln -s ../$(premade_alignments)/aligned_root_capFiltered.bam $(prefix)/aligned_root.bam | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j2_bowtie_logs_root 
else
	echo DEPS $*aligned_root.bam: $*capfiltered_root.fastq $(bowtie_db).1.ebwt
	echo bowtie -p 40 -v 0 -m 1 -a --best --strata --sam-no-qname-trunc -S $(bowtie_db) $(prefix)/capfiltered_root.fastq \| software/remove_no_hits.pl \| software/samtools sort -T \$$TMPDIR/tempfiles -O bam \> $(prefix)/aligned_root.bam | \
		SGE_Array -P 10 -q $(queues) -m 40G -r $(prefix)/j2_bowtie_logs_root --hold_names $(prefix)/j1_capfilter_seq_logs_root
endif


%aligned_root.rawpeaks: %aligned_root.bam
	echo ln -s ../$(premade_peaks)/aligned_root.rawpeaks $(prefix)/aligned_root.rawpeaks | \
                SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j2a_raw_root_peaks --hold_names $(prefix)/j2_bowtie_logs_root

%aligned_root.peaks: %aligned_root.rawpeaks
	echo DEPS $*aligned_root.peaks: $*aligned_root.bam
	echo bedtools coverage -s -d -abam $(prefix)/aligned_root.bam -b $(prefix)/aligned_root.rawpeaks \> $(root_covg_outfile) \; software/generate_peaks_for_annotation.R $(root_covg_outfile) $(prefix)/aligned_root.peaks |\
                SGE_Array -q $(queues) -m 20G -r $(prefix)/j3_peaks_logs_root --hold_names $(prefix)/j2a_raw_root_peaks

%aligned.peaks_root.annotated: %aligned_root.peaks
	echo DEPS $*aligned.peaks_root.annotated: $*aligned_root.peaks
	echo software/annotate_TSS_peaks.pl -p -G $(gff) $(prefix)/aligned_root.peaks \> $(prefix)/aligned.peaks_root.annotated | \
		SGE_Array -q $(queues) -m 5G -r $(prefix)/j4_annotate_peaks_logs_root --hold_names $(prefix)/j3_peaks_logs_root


%aligned.peaks.annotated_root.capped: %aligned.peaks_root.annotated
	echo DEPS $*aligned.peaks.annotated_root.capped: $*aligned.peaks_root.annotated
	echo software/CapFilter.pl peak --sorted --cutoff 0 --out $(prefix)/aligned.peaks.annotated_root.capped $(prefix)/aligned.peaks_root.annotated $(prefix)/aligned_root.bam $(genome) | \
		SGE_Array -q $(queues) -m 5G -r $(prefix)/j5_capfilter_cap_logs_root --hold_names $(prefix)/j4_annotate_peaks_logs_root

%aligned.peaks.annotated.capped_root.filtered: %aligned.peaks.annotated_root.capped
	echo DEPS $*aligned.peaks.annotated.capped_root.filtered: $*aligned.peaks.annotated_root.capped
	echo "cat $(prefix)/aligned.peaks.annotated_root.capped | awk -F ',' '{if(NR == 1) {print \$$0} else if( \$$NF > 50) {print \$$0 | \"sort -t, -k5,5nr\"}}' | awk -F ',' '{if(NR == 1) {print \$$0} else if( \$$9 == \"tss\" || \$$9 == \"<250\" || \$$9 == \"<500\" || \$$9 == \"5'\''utr\") {print \$$0}}' | awk -F ',' '{if(NR == 1) {print \$$0} else if(\$$10 == \"NA\") {print \$$1\",\"\$$2\",\"\$$3\",\"\$$4\",\"\$$5\",\"\$$6\",\"\$$7\",\"\$$8\",\"\$$9\",\"\$$11\".1\"\",\"\$$11\",\"\$$12\",\"\$$13 } else {print \$$0} }' > $(prefix)/aligned.peaks.annotated.capped_root.filtered" |\
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j6_filter_by_capped_logs_root --hold_names $(prefix)/j5_capfilter_cap_logs_root


# SET 3
################################
###
### Generating Regions of Interest
###
################################

#combine leaf and root tss filtered peaks
%aligned.peaks.annotated.capped.filtered: %aligned.peaks.annotated.capped_leaf.filtered %aligned.peaks.annotated.capped_root.filtered
	echo DEPS $*aligned.peaks.annotated.capped.filtered: $*aligned.peaks.annotated.capped_leaf.filtered $*aligned.peaks.annotated.capped_root.filtered
	echo "cat $(prefix)/aligned.peaks.annotated.capped_leaf.filtered <(tail -n +2 $(prefix)/aligned.peaks.annotated.capped_root.filtered) > $(prefix)/aligned.peaks.annotated.capped.filtered" | \
		SGE_Array -q $(queues) -m 1G -r $(prefix)/j7.1_merge_peaks_logs --hold_names $(prefix)/j6_filter_by_capped_logs_leaf,$(prefix)/j6_filter_by_capped_logs_root


# First: pull regions 
#%peaks_3000_region.fa: %aligned.peaks.annotated.capped.filtered
%peaks_3000_region.fa: 
	echo DEPS $*peaks_3000_region.fa: $*aligned.peaks.annotated.capped.filtered
	echo "software/get_seqs_stranded_oneLin_ibdc_header.pl $(prefix)/aligned.peaks.annotated.capped.filtered 3000 3000 $(genome)| software/dedup_fasta.sh > $(prefix)/peaks_3000_region.fa" |\
		SGE_Array -q $(queues) -m 10G -r $(prefix)/j7.2_get_peaks_seqs_logs --hold_names $(prefix)/j7.1_merge_peaks_logs

$(tss_region_for_oc_overall_1): %peaks_3000_region.fa
	echo software/get_tss_region.sh $(up_oc1) $(down_oc1) 3000 3000 $(prefix)/peaks_3000_region.fa \> $(tss_region_for_oc_overall_1) |\
		SGE_Array -q $(queues) -r $(prefix)/j7.3.1_get_overall_oc1_region_logs --hold_names $(prefix)/j7.2_get_peaks_seqs_logs

#$(tss_region_for_oc_overall_2): $(tss_region_for_oc_overall_1)
#	echo software/get_tss_region.sh $(up_oc2) $(down_oc2) 3000 3000 $(prefix)/peaks_3000_region.fa \> $(tss_region_for_oc_overall_2) |\
#		SGE_Array -q $(queues) -r $(prefix)/j7.3.2_get_overall_oc2_region_logs --hold_names $(prefix)/j7.3.1_get_overall_oc1_region_logs


################################
###
### Generating OC features, Leaf
###
################################

%oc_alignment_leaf.bam: $(input_oc_fastq_leaf) $(bowtie_db).1.ebwt
ifeq ($(skip_making_bams),1)
	echo DEPS $*oc_alignment_leaf.bam:
	mkdir -p $(prefix)
	echo ln -s ../$(premadefiles)/oc_alignment_leaf.bam $(prefix)/oc_alignment_leaf.bam | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j1_oc_leaf_bowtie_logs 
else
	echo DEPS $*oc_alignment_leaf.bam: $(input_oc_fastq_leaf) $(bowtie_db).1.ebwt
	echo bowtie -p 40 -v 0 -m 1 -a --best --strata --sam-no-qname-trunc -S $(bowtie_db) $(input_oc_fastq_leaf) \| software/remove_no_hits.pl \| software/samtools sort -T \$$TMPDIR/tempfiles -O bam \> $(prefix)/oc_alignment_leaf.bam | \
		SGE_Array -P 10 -q $(queues) -m 40G -r $(prefix)/j1_oc_leaf_bowtie_logs
endif



%oc_alignment_leaf.bed: %oc_alignment_leaf.bam
	echo DEPS $*oc_alignment_leaf.bed: $*oc_alignment_leaf.bam
	echo software/bamToBed -i $(prefix)/oc_alignment_leaf.bam \| grep -v \'Chr[CM]\' \> $(prefix)/oc_alignment_leaf.bed | \
 		SGE_Array -q $(queues) -m 40G -r $(prefix)/j2_oc_leaf_bamtobed_logs --hold_names $(prefix)/j1_oc_leaf_bowtie_logs
		

%oc_peaks_leaf.bed: %oc_alignment_leaf.bed
	echo DEPS $*oc_peaks_leaf.bed: $*oc_alignment_leaf.bed
	echo mkdir -p $(prefix)/peaks_dir_leaf\; cd $(prefix)/peaks_dir_leaf\; ../../software/fseq-1.84/bin/fseq -f 0 -l 200 -of bed -t $(threshold_oc) ../oc_alignment_leaf.bed\; cat Chr*.bed \> ../oc_peaks_leaf.bed\; rm Chr*.bed | \
		SGE_Array -q $(queues) -m 100G -r $(prefix)/j3_oc_leaf_peak_logs --hold_names $(prefix)/j2_oc_leaf_bamtobed_logs

clean_oc: 
	echo DEPS clean_oc: 
	rm $(prefix)/oc_*
	rm -rf $(prefix)/j*_oc*

################################
###
### Generating OC features, Root
###
################################

%oc_alignment_root.bam: $(input_oc_fastq_root) $(bowtie_db).1.ebwt
ifeq ($(skip_making_bams),1)
	echo DEPS $*oc_alignment_root.bam:
	mkdir -p $(prefix)
	echo ln -s ../$(premadefiles)/oc_alignment_root.bam $(prefix)/oc_alignment_root.bam | \
		SGE_Array -P 1 -q $(queues) -m 1G -r $(prefix)/j1_oc_root_bowtie_logs
else
	echo DEPS $*oc_alignment_root.bam: $(input_oc_fastq_root) $(bowtie_db).1.ebwt
	echo bowtie -p 40 -v 0 -m 1 -a --best --strata --sam-no-qname-trunc -S $(bowtie_db) $(input_oc_fastq_root) \| software/remove_no_hits.pl \| software/samtools sort -T \$$TMPDIR/tempfiles -O bam \> $(prefix)/oc_alignment_root.bam | \
		SGE_Array -P 10 -q $(queues) -m 40G -r $(prefix)/j1_oc_root_bowtie_logs
endif



%oc_alignment_root.bed: %oc_alignment_root.bam
	echo DEPS $*oc_alignment_root.bed: $*oc_alignment_root.bam
	echo software/bamToBed -i $(prefix)/oc_alignment_root.bam \| grep -v \'Chr[CM]\' \> $(prefix)/oc_alignment_root.bed | \
 		SGE_Array -q $(queues) -m 40G -r $(prefix)/j2_oc_root_bamtobed_logs --hold_names $(prefix)/j1_oc_root_bowtie_logs
		

%oc_peaks_root.bed: %oc_alignment_root.bed
	echo DEPS $*oc_peaks_root.bed: $*oc_alignment_root.bed
	echo mkdir -p $(prefix)/peaks_dir_root\; cd $(prefix)/peaks_dir_root\; ../../software/fseq-1.84/bin/fseq -f 0 -l 200 -of bed -t $(threshold_oc) ../oc_alignment_root.bed\; cat Chr*.bed \> ../oc_peaks_root.bed\; rm Chr*.bed | \
		SGE_Array -q $(queues) -m 100G -r $(prefix)/j3_oc_root_peak_logs --hold_names $(prefix)/j2_oc_root_bamtobed_logs



%tiled_features_raw.rdat: $(tss_region_for_oc_overall_1)
	echo software/get_features_inparallel.sh $(prefix)/peaks_3000_region.fa $(prefix) $(prefix)/tiled_features.rdat $(prefix)/tiled_features_map.txt $(tile_nucsUp) $(tile_nucsDown) $(tileWin) $(pwm) | \
		SGE_Array -P 30 -q $(queues) -m 400G -r $(prefix)/j9b_genfeatures_tiled_logs --hold_names $(prefix)/j7.2_get_peaks_seqs_logs


%tiled_features.rdat: %max_pwm_scores.txt $(tss_region_for_oc_overall_1)
	echo software/get_features_inparallel_tile_maxNorm.sh $(prefix)/peaks_3000_region.fa $(prefix) $(prefix)/tiled_features.rdat $(prefix)/tiled_features_map.txt $(tile_nucsUp) $(tile_nucsDown) $(tileWin) $(pwm) $(prefix)/max_pwm_scores.txt |\
		SGE_Array -P 30 -q $(queues) -m 400G -r $(prefix)/j9b_genfeatures_tiled_logs --hold_names $(prefix)/j7.2_get_peaks_seqs_logs
################################
###
### Generating overall openness; one for leaf, one for root
###
################################


%features_long_oc_p_overall_1_leaf.txt: %oc_peaks_leaf.bed
	echo DEPS $*features_long_oc_p_overall_leaf.txt: $*oc_peaks_leaf.bed \$(tss_region_for_oc_overall_1)
	echo software/compute_range_overlap.sh $(tss_region_for_oc_overall_1) $(prefix)/oc_peaks_leaf.bed LEAF $(prefix)/features_long_oc_p_overall_1_leaf.txt |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/j7.5.1_oc_p_overall_1_leaf_logs --hold_names $(prefix)/j3_oc_leaf_peak_logs,$(prefix)/j7.3.1_get_overall_oc1_region_logs

#%features_long_oc_p_overall_2_leaf.txt: %oc_peaks_leaf.bed %features_long_oc_p_overall_1_leaf.txt
#	echo software/compute_range_overlap.sh $(tss_region_for_oc_overall_2) $(prefix)/oc_peaks_leaf.bed LEAF $(prefix)/features_long_oc_p_overall_2_leaf.txt |\
#		SGE_Array -q $(queues) -m 200G -r $(prefix)/j7.5.2_oc_p_overall_2_leaf_logs --hold_names $(prefix)/j3_oc_leaf_peak_logs,$(prefix)/j7.3.2_get_overall_oc2_region_logs

%features_long_oc_p_overall_1_root.txt: %oc_peaks_root.bed
	echo DEPS $*features_long_oc_p_overall_root.txt: $*oc_peaks_root.bed \$(tss_region_for_oc_overall_1)
	echo software/compute_range_overlap.sh $(tss_region_for_oc_overall_1) $(prefix)/oc_peaks_root.bed ROOT $(prefix)/features_long_oc_p_overall_1_root.txt |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/j7.5.1_oc_p_overall_1_root_logs --hold_names $(prefix)/j3_oc_root_peak_logs,$(prefix)/j7.3.1_get_overall_oc1_region_logs

#%features_long_oc_p_overall_2_root.txt: %oc_peaks_root.bed %features_long_oc_p_overall_1_root.txt %features_long_oc_p_overall_2_leaf.txt 
#	echo software/compute_range_overlap.sh $(tss_region_for_oc_overall_2) $(prefix)/oc_peaks_root.bed ROOT $(prefix)/features_long_oc_p_overall_2_root.txt |\
#		SGE_Array -q $(queues) -m 200G -r $(prefix)/j7.5.2_oc_p_overall_2_root_logs --hold_names $(prefix)/j3_oc_root_peak_logs,$(prefix)/j7.3.2_get_overall_oc2_region_logs

%tiled_features_long_oc_p_leaf.txt:
	echo software/compute_oc_overlap.sh $(prefix)/tiled_features_map.txt $(prefix)/oc_peaks_leaf.bed OC_P_LEAF $(prefix)/tiled_features_long_oc_p_leaf.txt $(prefix)/tiled 100000 40 |\
		SGE_Array -P 40 -q $(queues) -m 200G -r $(prefix)/j1b_merge_oc_p_leaf_tiled_logs --hold_names $(prefix)/j9b_genfeatures_tiled_logs,$(prefix)/j3_oc_leaf_peak_logs

%tiled_features_long_oc_p_root.txt: 
	echo software/compute_oc_overlap.sh $(prefix)/tiled_features_map.txt $(prefix)/oc_peaks_root.bed OC_P_ROOT $(prefix)/tiled_features_long_oc_p_root.txt $(prefix)/tiled 100000 40 |\
		SGE_Array -P 40 -q *@megraw2* -m 200G -r $(prefix)/j1b_merge_oc_p_root_tiled_logs --hold_names $(prefix)/j9b_genfeatures_tiled_logs,$(prefix)/j3_oc_root_peak_logs

%tiled_oc_leaf_wide.rdat: %tiled_features_long_oc_p_leaf.txt
	echo software/long_to_wide.R $(prefix)/tiled_features_long_oc_p_leaf.txt $(prefix)/tiled_oc_leaf_wide.rdat |\
		SGE_Array -q *@megraw1* -m 400G -r $(prefix)/jm2_oc_leaf_wide_logs --hold_names $(prefix)/j1b_merge_oc_p_leaf_tiled_logs


%tiled_oc_root_wide.rdat: %tiled_features_long_oc_p_root.txt
	echo software/long_to_wide.R $(prefix)/tiled_features_long_oc_p_root.txt $(prefix)/tiled_oc_root_wide.rdat |\
		SGE_Array -q *@megraw2* -m 400G -r $(prefix)/jm2_oc_root_wide_logs --hold_names $(prefix)/j1b_merge_oc_p_root_tiled_logs

%oc_p_overall_1_leaf_wide.rdat: %features_long_oc_p_overall_1_leaf.txt
	echo software/long_to_wide.R $(prefix)/features_long_oc_p_overall_1_leaf.txt $(prefix)/oc_p_overall_1_leaf_wide.rdat |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/jm3.1_oc_p_overall_leaf_wide_logs --hold_names $(prefix)/j7.5.1_oc_p_overall_1_leaf_logs

#%oc_p_overall_2_leaf_wide.rdat: %oc_p_overall_1_leaf_wide.rdat
#	echo software/long_to_wide.R $(prefix)/features_long_oc_p_overall_2_leaf.txt $(prefix)/oc_p_overall_2_leaf_wide.rdat |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/jm3.2_oc_p_overall_leaf_wide_logs --hold_names $(prefix)/j7.5.2_oc_p_overall_2_leaf_logs

%oc_p_overall_1_root_wide.rdat: %features_long_oc_p_overall_1_root.txt 
	echo software/long_to_wide.R $(prefix)/features_long_oc_p_overall_1_root.txt $(prefix)/oc_p_overall_1_root_wide.rdat |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/jm3.1_oc_p_overall_root_wide_logs --hold_names $(prefix)/j7.5.1_oc_p_overall_1_root_logs

#%oc_p_overall_2_root_wide.rdat: %oc_p_overall_1_root_wide.rdat
#	echo software/long_to_wide.R $(prefix)/features_long_oc_p_overall_2_root.txt $(prefix)/oc_p_overall_2_root_wide.rdat |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/jm3.2_oc_p_overall_root_wide_logs --hold_names $(prefix)/j7.5.2_oc_p_overall_2_root_logs

# SET 8
#####################################################
###
### Merging allll the features together
###
#####################################################
#%all_features_diffs_wide.rdat: %tiled_features.rdat %oc_p_overall_1_root_wide.rdat %oc_p_overall_1_leaf_wide.rdat %tiled_oc_leaf_wide.rdat %tiled_oc_root_wide.rdat $(input_expr_diff)
%all_features_diffs_wide.rdat: 
	echo software/merge_features_tile_only.R $(prefix)/tiled_features.rdat $(prefix)/oc_p_overall_1_leaf_wide.rdat $(prefix)/oc_p_overall_1_root_wide.rdat $(prefix)/tiled_oc_leaf_wide.rdat $(prefix)/tiled_oc_root_wide.rdat $(input_expr_diff) $(prefix)/all_features_diffs_wide.rdat $(prefix)/all_tss_diffs_wide.rdat |\
		SGE_Array -q $(queues) -m 200G -r $(prefix)/j1_merge_all_features --hold_names $(prefix)/j9b_genfeatures_tiled_logs,$(prefix)/jm2_oc_leaf_wide_logs,$(prefix)/jm2_oc_root_wide_logs,$(prefix)/jm3.1_oc_p_overall_leaf_wide_logs,$(prefix)/jm3.2_oc_p_overall_leaf_wide_logs,$(prefix)/jm3.1_oc_p_overall_root_wide_logs,$(prefix)/jm3.2_oc_p_overall_root_wide_logs

	
